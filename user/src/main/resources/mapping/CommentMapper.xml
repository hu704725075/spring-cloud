<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="dao.CommentMapper" >
  <resultMap id="BaseResultMap" type="Comment" >
    <id column="comment_id" property="commentId" jdbcType="INTEGER" />
    <result column="comment_type_id" property="commentTypeId" jdbcType="INTEGER" />
    <result column="comment_context" property="commentContext" jdbcType="VARCHAR" />
    <result column="comment_to_user_id" property="commentToUserId" jdbcType="INTEGER" />
    <result column="user_id" property="userId" jdbcType="INTEGER" />
    <result column="activity_id" property="activityId" jdbcType="INTEGER" />
    <result column="comment_create_time" property="commentCreateTime" jdbcType="TIMESTAMP" />
    <result column="comment_update_time" property="commentUpdateTime" jdbcType="TIMESTAMP" />
    <result column="is_vaild" property="isVaild" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    comment_id, comment_type_id, comment_context, comment_to_user_id, user_id, activity_id, 
    comment_create_time, comment_update_time, is_vaild
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from t_comment
    where comment_id = #{commentId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from t_comment
    where comment_id = #{commentId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="Comment" >
    insert into t_comment (comment_id, comment_type_id, comment_context, 
      comment_to_user_id, user_id, activity_id, 
      comment_create_time, comment_update_time, 
      is_vaild)
    values (#{commentId,jdbcType=INTEGER}, #{commentTypeId,jdbcType=INTEGER}, #{commentContext,jdbcType=VARCHAR}, 
      #{commentToUserId,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, #{activityId,jdbcType=INTEGER}, 
      #{commentCreateTime,jdbcType=TIMESTAMP}, #{commentUpdateTime,jdbcType=TIMESTAMP}, 
      #{isVaild,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="Comment" >
    insert into t_comment
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="commentId != null" >
        comment_id,
      </if>
      <if test="commentTypeId != null" >
        comment_type_id,
      </if>
      <if test="commentContext != null" >
        comment_context,
      </if>
      <if test="commentToUserId != null" >
        comment_to_user_id,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
      <if test="activityId != null" >
        activity_id,
      </if>
      <if test="commentCreateTime != null" >
        comment_create_time,
      </if>
      <if test="commentUpdateTime != null" >
        comment_update_time,
      </if>
      <if test="isVaild != null" >
        is_vaild,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="commentId != null" >
        #{commentId,jdbcType=INTEGER},
      </if>
      <if test="commentTypeId != null" >
        #{commentTypeId,jdbcType=INTEGER},
      </if>
      <if test="commentContext != null" >
        #{commentContext,jdbcType=VARCHAR},
      </if>
      <if test="commentToUserId != null" >
        #{commentToUserId,jdbcType=INTEGER},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="activityId != null" >
        #{activityId,jdbcType=INTEGER},
      </if>
      <if test="commentCreateTime != null" >
        #{commentCreateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="commentUpdateTime != null" >
        #{commentUpdateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="isVaild != null" >
        #{isVaild,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="Comment" >
    update t_comment
    <set >
      <if test="commentTypeId != null" >
        comment_type_id = #{commentTypeId,jdbcType=INTEGER},
      </if>
      <if test="commentContext != null" >
        comment_context = #{commentContext,jdbcType=VARCHAR},
      </if>
      <if test="commentToUserId != null" >
        comment_to_user_id = #{commentToUserId,jdbcType=INTEGER},
      </if>
      <if test="userId != null" >
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="activityId != null" >
        activity_id = #{activityId,jdbcType=INTEGER},
      </if>
      <if test="commentCreateTime != null" >
        comment_create_time = #{commentCreateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="commentUpdateTime != null" >
        comment_update_time = #{commentUpdateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="isVaild != null" >
        is_vaild = #{isVaild,jdbcType=INTEGER},
      </if>
    </set>
    where comment_id = #{commentId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="Comment" >
    update t_comment
    set comment_type_id = #{commentTypeId,jdbcType=INTEGER},
      comment_context = #{commentContext,jdbcType=VARCHAR},
      comment_to_user_id = #{commentToUserId,jdbcType=INTEGER},
      user_id = #{userId,jdbcType=INTEGER},
      activity_id = #{activityId,jdbcType=INTEGER},
      comment_create_time = #{commentCreateTime,jdbcType=TIMESTAMP},
      comment_update_time = #{commentUpdateTime,jdbcType=TIMESTAMP},
      is_vaild = #{isVaild,jdbcType=INTEGER}
    where comment_id = #{commentId,jdbcType=INTEGER}
  </update>
</mapper>